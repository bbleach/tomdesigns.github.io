var grid = []

//FROM INIT FUNCTION, i IS Y VALUES, j IS X VALUES

function init() {
    grid = []
    $(".grid").empty().show();
    for (i = 0; i < 16; i++) {
        grid.push([]);
        $('<div class="outside"></div>').appendTo('.grid');
        for (j = 0; j < 16; j++) {
            var v = Math.floor((Math.random() * 4) + 1)
            grid[i].push(v);

            switch (v) {
                case 1:
                    v = "red";
                    break;
                case 2:
                    v = "green";
                    break;
                case 3:
                    v = "blue";
                    break;
                case 4:
                    v = "yellow";
            };
            $(`<div class="${v}" onclick="test(${j},${i})"></div>`).appendTo(`body > section > div.grid > div:nth-child(${i + 1})`);
            //$(`<div class="${v}"></div>`).appendTo(`.grid div:nth-child(${i})`);
        }
    }
    animateIn();
    console.log(grid);
};

function test(x, y) {
    var c = grid[y][x]

    if (grid[y - 1][x] == c) {
        grid[y - 1][x] = 0;
        test2(x, y - 1, c);
    };
    if (grid[y + 1][x] == c) {
        grid[y + 1][x] = 0;
        test2(x, y + 1, c);
    };
    if (grid[y][x - 1] == c) {
        grid[y][x - 1] = 0;
        test2(x - 1, y, c);
    };
    if (grid[y][x + 1] == c) {
        grid[y][x + 1] = 0;
        test2(x + 1, y, c);
    }
    grid[y][x] = 0;

    for (i = 0; i < 16; i++) {
        for (j = 0; j < 16; j++) {
            if (grid[i][j] == 0) {
                $(`.outside:nth-child(${i + 1}) > div:nth-child(${j + 1})`).removeAttr('class').addClass("transparent");
            }
        }
    };
    
};
function test2(x, y, c) {
    if (grid[y - 1][x] == c) {
        grid[y - 1][x] = 0;
        test2(x, y - 1, c);
    };
    if (grid[y + 1][x] == c) {
        grid[y + 1][x] = 0;
        test2(x, y + 1, c);
    };
    if (grid[y][x - 1] == c) {
        grid[y][x - 1] = 0;
        test2(x - 1, y, c);
    };
    if (grid[y][x + 1] == c) {
        grid[y][x + 1] = 0;
        test2(x + 1, y, c);
    };
    grid[y][x] = 0;

    for (i = 0; i < 16; i++) {
        for (j = 0; j < 16; j++) {
            v = grid[i][j];
            switch (v) {
                case 0:
                    $(`.outside:nth-child(${i + 1}) > div:nth-child(${j + 1})`).removeAttr('class').addClass("transparent");
                    break;
                /*case 1:
                    $(`.outside:nth-child(${i + 1}) > div:nth-child(${j + 1})`).removeAttr('class');
                    break;*/
            }
        }
    };
};







//Animations
function animateIn() {
    TweenMax.staggerFrom($('.outside'), 1, {x: '-100vh', autoAlpha: 0, delay: 0, ease: Expo.easeOut }, 0.04);
};